/* Reset default margin and padding */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Global styles */
body {
    font-family: 'Roboto', sans-serif;
    background-color: #fff; /* White background */
    color: #000; /* Black text color */
    padding-top: 56px;
}

a {
    color: #800080; /* Purple link color */
    text-decoration: none;
    transition: color 0.3s;
}

a:hover {
    color: #4b004e; /* Darker purple on hover */
}

.navbar {
    background-color: rgba(0, 0, 0, 0.8) !important;
    transition: all 0.4s;
}

.navbar-scrolled {
    background-color: rgba(0, 0, 0, 0.9) !important;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
}

.navbar-brand, .nav-link {
    color: #fff !important; /* White text color for navbar links */
}

.navbar-brand:hover, .nav-link:hover {
    color: #f0f0f0 !important; /* Lighter text color on hover */
}

/* Section styles */
section {
    padding-top: 100px;
    padding-bottom: 100px;
    position: relative;
    z-index: 1;
}

/* Card styles */
.card {
    background-color: rgba(255, 255, 255, 0.9); /* Light opaque white background */
    border: none;
    transition: transform 0.3s, box-shadow 0.3s;
    color: #000; /* Black text color */
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Dark shadow on hover */
}

.card-title, .card-subtitle, .card-text {
    color: #000; /* Black text color for card content */
}

/* List group item styles */
.list-group-item {
    background-color: rgba(255, 255, 255, 0.9); /* Light opaque white background */
    color: #000; /* Black text color */
    border-color: rgba(255, 255, 255, 0.9);
    transition: background-color 0.3s;
}

.list-group-item:hover {
    background-color: rgba(255, 255, 255, 0.95); /* Lighter background on hover */
}

/* Floating boxes animation */
.floating-boxes {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
}

.box {
    position: absolute;
    width: 60px;
    height: 60px;
    background-color: rgba(255, 255, 255, 0.1); /* Light opaque white */
    animation: float 15s infinite;
}

.box:nth-child(1) { left: 10%; top: 20%; }
.box:nth-child(2) { left: 30%; top: 40%; animation-delay: 2s; }
.box:nth-child(3) { left: 50%; top: 60%; animation-delay: 4s; }
.box:nth-child(4) { left: 70%; top: 80%; animation-delay: 6s; }
.box:nth-child(5) { left: 90%; top: 10%; animation-delay: 8s; }

@keyframes float {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(180deg); }
}

/* Home section background */
#home {
    background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('https://source.unsplash.com/random/1920x1080?technology') no-repeat center center/cover;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Button styles */
.btn-outline-light {
    color: #fff; /* White text color */
    border-color: #fff; /* White border color */
}

.btn-outline-light:hover {
    background-color: #fff; /* White background on hover */
    color: #800080; /* Purple text color on hover */
}

/* Form control styles */
.form-control {
    background-color: rgba(255, 255, 255, 0.9); /* Light opaque white background */
    border-color: rgba(255, 255, 255, 0.9); /* Light border color */
    color: #000; /* Black text color */
}

.form-control:focus {
    background-color: rgba(255, 255, 255, 1); /* Fully opaque white background on focus */
    border-color: rgba(255, 255, 255, 0.9); /* Lighter border color on focus */
    color: #000; /* Black text color on focus */
}

.form-control::placeholder {
    color: rgba(0, 0, 0, 0.5); /* Semi-transparent placeholder text color */
}

/* Reveal animation */
.reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease;
}

.reveal.active {
    opacity: 1;
    transform: translateY(0);
}

/* Skill progress bar */
.skill-progress {
    height: 10px;
    background-color: rgba(0, 0, 0, 0.1); /* Light opaque black background */
    border-radius: 5px;
    overflow: hidden;
}

.skill-progress-bar {
    height: 100%;
    background-color: #800080; /* Purple progress bar color */
    width: 0;
    transition: width 1s ease;
}

/* Project image */
.project-image {
    height: 200px;
    object-fit: cover;
}

/* Timeline styles */
.timeline {
    position: relative;
    padding: 0;
    list-style: none;
}

.timeline:before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    width: 2px;
    margin-left: -1px;
    background-color: rgba(0, 0, 0, 0.2); /* Light opaque black */
}

.timeline > li {
    position: relative;
    margin-bottom: 50px;
}

.timeline > li:after, .timeline > li:before {
    content: " ";
    display: table;
}

.timeline > li:after {
    clear: both;
}

.timeline > li .timeline-panel {
    float: left;
    position: relative;
    width: 46%;
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.9); /* Light opaque white background */
    border-radius: 8px;
}

.timeline > li .timeline-panel:before {
    right: -15px;
    border-left-width: 15px;
    border-right-width: 0;
}

.timeline > li .timeline-panel:after {
    right: -14px;
    border-left-width: 14px;
    border-right-width: 0;
}

.timeline > li .timeline-image {
    z-index: 100;
    position: absolute;
    left: 50%;
    width: 80px;
    height: 80px;
    margin-left: -40px;
    background-color: #fff;
    color: #000;
    border-radius: 100%;
    border: 7px solid #e9ecef;
    text-align: center;
}

.timeline > li .timeline-image h4 {
    font-size: 10px;
    margin-top: 12px;
    line-height: 14px;
}

.timeline > li.timeline-inverted > .timeline-panel {
    float: right;
}

.timeline > li.timeline-inverted > .timeline-panel:before {
    left: -15px;
    border-right-width: 15px;
    border-left-width: 0;
}

.timeline > li.timeline-inverted > .timeline-panel:after {
    left: -14px;
    border-right-width: 14px;
    border-left-width: 0;
}

.text-muted {
    color: #ccc !important; /* Light gray text color */
}


This is my CSS file 




This is my js

$(document).ready(function() {
    // Smooth scrolling
    $('a.nav-link, .btn').on('click', function(event) {
        if (this.hash !== "") {
            event.preventDefault();
            var hash = this.hash;
            $('html, body').animate({
                scrollTop: $(hash).offset().top - 56
            }, 800);
        }
    });

    // Navbar color change on scroll
    $(window).scroll(function() {
        if ($(this).scrollTop() > 50) {
            $('.navbar').addClass('navbar-scrolled');
        } else {
            $('.navbar').removeClass('navbar-scrolled');
        }
    });

    // Parallax effect on home section
    $(window).scroll(function() {
        var scrollPosition = $(this).scrollTop();
        $('#home').css('background-position-y', -(scrollPosition * 0.5) + 'px');
    });

    // Typing effect for home section
    const typed = new Typed('#typed-text', {
        strings: ['Software Engineer', 'Electrical Engineering Student', 'Technology Enthusiast'],
        typeSpeed: 50,
        backSpeed: 30,
        loop: true
    });

    // Project filter
    $('.filter-btn').on('click', function() {
        var category = $(this).attr('data-filter');
        if (category === 'all') {
            $('.project-item').show('1000');
        } else {
            $('.project-item').not('.' + category).hide('1000');
            $('.project-item').filter('.' + category).show('1000');
        }
        $(this).addClass('active').siblings().removeClass('active');
    });

    // Lazy loading images
    const images = document.querySelectorAll('[data-src]');
    const config = {
        rootMargin: '0px 0px 50px 0px',
        threshold: 0
    };

    let observer = new IntersectionObserver(function(entries, self) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                preloadImage(entry.target);
                self.unobserve(entry.target);
            }
        });
    }, config);

    images.forEach(image => {
        observer.observe(image);
    });

    function preloadImage(img) {
        const src = img.getAttribute('data-src');
        if (!src) { return; }
        img.src = src;
    }

    // Form validation and submission
    $('#contact-form').submit(function(e) {
        e.preventDefault();
        var name = $('#name').val();
        var email = $('#email').val();
        var message = $('#message').val();
        var errors = [];

        if (name.length < 2) {
            errors.push('Name must be at least 2 characters long');
        }

        if (!validateEmail(email)) {
            errors.push('Please enter a valid email address');
        }

        if (message.length < 10) {
            errors.push('Message must be at least 10 characters long');
        }

        if (errors.length > 0) {
            alert(errors.join('\n'));
        } else {
            alert('Thank you for your message, ' + name + '! I will get back to you soon.');
            this.reset();
        }
    });

    function validateEmail(email) {
        var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
    }

    // Interactive floating boxes
    $('.box').on('mouseenter', function() {
        $(this).css('transform', 'scale(1.2) rotate(45deg)');
    }).on('mouseleave', function() {
        $(this).css('transform', '');
    });

    // Dynamic content loading for projects
    $('#load-more-projects').on('click', function() {
        $.ajax({
            url: 'more-projects.json', // You'll need to create this JSON file
            dataType: 'json',
            success: function(data) {
                data.projects.forEach(function(project) {
                    var projectHtml = `
                        <div class="col-md-6 mb-4 project-item ${project.category} reveal">
                            <div class="card h-100">
                                <img src="${project.image}" class="card-img-top project-image" alt="${project.title}">
                                <div class="card-body">
                                    <h5 class="card-title">${project.title}</h5>
                                    <p class="card-text">${project.description}</p>
                                </div>
                            </div>
                        </div>
                    `;
                    $('#projects-container').append(projectHtml);
                });
                reveal();
            },
            error: function() {
                alert('Error loading more projects');
            }
        });
    });

    // Reveal animations
    function reveal() {
        var reveals = document.querySelectorAll(".reveal");
        for (var i = 0; i < reveals.length; i++) {
            var windowHeight = window.innerHeight;
            var elementTop = reveals[i].getBoundingClientRect().top;
            var elementVisible = 150;
            if (elementTop < windowHeight - elementVisible) {
                reveals[i].classList.add("active");
            } else {
                reveals[i].classList.remove("active");
            }
        }
    }

    window.addEventListener("scroll", reveal);

    // Animate skill progress bars
    function animateSkills() {
        $('.skill-progress-bar').each(function() {
            var $this = $(this);
            var width = $this.data('width');
            $this.css('width', width + '%');
        });
    }

    // Call functions on page load
    reveal();
    animateSkills();

    // Smooth scroll for internal links
    $('a[href^="#"]').on('click', function(event) {
        var target = $(this.getAttribute('href'));
        if (target.length) {
            event.preventDefault();
            $('html, body').stop().animate({
                scrollTop: target.offset().top - 70
            }, 1000);
        }
    });

    // Scroll back to top button
    var backToTopBtn = $('<button/>', {
        class: 'btn btn-primary back-to-top',
        html: '<i class="fa fa-chevron-up"></i>',
        click: function() {
            $('html, body').animate({ scrollTop: 0 }, 800);
        }
    }).appendTo('body');

    $(window).scroll(function() {
        if ($(window).scrollTop() > 300) {
            backToTopBtn.fadeIn();
        } else {
            backToTopBtn.fadeOut();
        }
    });

    // Initialize tooltips
    $('[data-toggle="tooltip"]').tooltip();

    // Dark mode toggle
    $('#dark-mode-toggle').on('click', function() {
        $('body').toggleClass('dark-mode');
        var isDarkMode = $('body').hasClass('dark-mode');
        $(this).text(isDarkMode ? 'Light Mode' : 'Dark Mode');
    });
});

